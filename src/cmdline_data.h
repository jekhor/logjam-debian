/* autogenerated by gen.pl */

/* logjam */
#define LOGJAM_SHORT_OPTIONS "+vqu:p:a:f:eh"
#define LOGJAM_LONG_OPTIONS { \
	{ "version", no_argument, 0, 'v' }, \
	{ "quiet", no_argument, 0, 'q' }, \
	{ "username", required_argument, 0, 'u' }, \
	{ "password", required_argument, 0, 'p' }, \
	{ "postas", required_argument, 0, 'a' }, \
	{ "file", required_argument, 0, 'f' }, \
	{ "edit", no_argument, 0, 'e' }, \
	{ "help", no_argument, 0, 'h' }, \
	{ "list-subcommands", no_argument, 0, OPT_LIST_SUBCOMMANDS }, \
	{ 0, 0, 0, 0 }, \
}
#define LOGJAM_SUBCOMMANDS { \
	{ "checkfriends", _("Efficiently check friends list for updates."), TRUE, FALSE, TRUE, do_checkfriends }, \
	{ "console", _("Run a command on the LiveJournal console."), TRUE, FALSE, TRUE, do_console }, \
	{ "post", _("Post event immediately."), TRUE, FALSE, TRUE, do_post }, \
	{ "offline", _("Manage offline copies of your journal."), TRUE, TRUE, FALSE, do_offline }, \
	{ "user", _("Manage user list."), FALSE, FALSE, FALSE, do_user }, \
	{ NULL }, \
}
#define LOGJAM_HELP_TEXT \
	"Options:\n" \
	"  -v, --version                          Show version of program.\n" \
	"  -q, --quiet                            Say less.\n" \
	"\n" \
	"  -u, --username                         Username to operate as.\n" \
	"  -p, --password                         Password for the current user.\n" \
	"  -a, --postas                           User/community to post as.\n" \
	"\n" \
	"  -f, --file                             File to load.\n" \
	"  -e, --edit                             Use default editor to edit post.\n"
/* logjam */

/* checkfriends */
#define CHECKFRIENDS_SHORT_OPTIONS "+h"
#define CHECKFRIENDS_LONG_OPTIONS { \
	{ "help", no_argument, 0, 'h' }, \
	{ "list-subcommands", no_argument, 0, OPT_LIST_SUBCOMMANDS }, \
	{ 0, 0, 0, 0 }, \
}
#define CHECKFRIENDS_SUBCOMMANDS { \
	{ "purge", _("Reset checkfriends information."), TRUE, FALSE, FALSE, do_checkfriends_purge }, \
	{ NULL }, \
}
#define CHECKFRIENDS_HELP_TEXT \
	"Monitors your friends page for updates. Running this is faster and more\n" \
	"efficient than loading the whole friends page itself.\n"
/* checkfriends */

/* checkfriends_purge */
#define CHECKFRIENDS_PURGE_SHORT_OPTIONS "+h"
#define CHECKFRIENDS_PURGE_LONG_OPTIONS { \
	{ "help", no_argument, 0, 'h' }, \
	{ "list-subcommands", no_argument, 0, OPT_LIST_SUBCOMMANDS }, \
	{ 0, 0, 0, 0 }, \
}
#define CHECKFRIENDS_PURGE_SUBCOMMANDS { \
	{ NULL }, \
}
#define CHECKFRIENDS_PURGE_HELP_TEXT \
	"Reset checkfriends information.\n"
/* checkfriends_purge */

/* console */
#define CONSOLE_SHORT_OPTIONS "+h"
#define CONSOLE_LONG_OPTIONS { \
	{ "help", no_argument, 0, 'h' }, \
	{ "list-subcommands", no_argument, 0, OPT_LIST_SUBCOMMANDS }, \
	{ 0, 0, 0, 0 }, \
}
#define CONSOLE_SUBCOMMANDS { \
	{ NULL }, \
}
#define CONSOLE_HELP_TEXT \
	"Run a command on the LiveJournal console.\n"
/* console */

/* post */
#define POST_SHORT_OPTIONS "+s:k:eh"
#define POST_LONG_OPTIONS { \
	{ "subject", required_argument, 0, 's' }, \
	{ "userpic", required_argument, 0, 'k' }, \
	{ "edit", no_argument, 0, 'e' }, \
	{ "help", no_argument, 0, 'h' }, \
	{ "list-subcommands", no_argument, 0, OPT_LIST_SUBCOMMANDS }, \
	{ 0, 0, 0, 0 }, \
}
#define POST_SUBCOMMANDS { \
	{ NULL }, \
}
#define POST_HELP_TEXT \
	"Post event immediately.\n" \
	"Options:\n" \
	"  -s, --subject                          Subject for the post.\n" \
	"  -k, --userpic                          Keyword for the user picture to use.\n" \
	"  -e, --edit                             Use default editor to edit post.\n"
/* post */

/* offline */
#define OFFLINE_SHORT_OPTIONS "+h"
#define OFFLINE_LONG_OPTIONS { \
	{ "help", no_argument, 0, 'h' }, \
	{ "list-subcommands", no_argument, 0, OPT_LIST_SUBCOMMANDS }, \
	{ 0, 0, 0, 0 }, \
}
#define OFFLINE_SUBCOMMANDS { \
	{ "sync", _("Synchronize offline journal."), TRUE, FALSE, TRUE, do_offline_sync }, \
	{ "cat", _("Show entries from local store."), TRUE, FALSE, FALSE, do_offline_cat }, \
	{ "grep", _("Find entries by regexp."), TRUE, FALSE, FALSE, do_offline_grep }, \
	{ "summary", _("Show a summary of an offline store."), TRUE, FALSE, FALSE, do_offline_summary }, \
	{ "reindex", _("Rebuild the index an offline store."), TRUE, FALSE, FALSE, do_offline_reindex }, \
	{ NULL }, \
}
#define OFFLINE_HELP_TEXT \
	"Manage offline copies of your journal.\n"
/* offline */

/* offline_sync */
#define OFFLINE_SYNC_SHORT_OPTIONS "+h"
#define OFFLINE_SYNC_LONG_OPTIONS { \
	{ "help", no_argument, 0, 'h' }, \
	{ "list-subcommands", no_argument, 0, OPT_LIST_SUBCOMMANDS }, \
	{ 0, 0, 0, 0 }, \
}
#define OFFLINE_SYNC_SUBCOMMANDS { \
	{ NULL }, \
}
#define OFFLINE_SYNC_HELP_TEXT \
	"Synchronize offline journal.\n"
/* offline_sync */

/* offline_cat */
#define OFFLINE_CAT_SHORT_OPTIONS "+txh"
#define OFFLINE_CAT_LONG_OPTIONS { \
	{ "desc", no_argument, 0, 't' }, \
	{ "xml", no_argument, 0, 'x' }, \
	{ "help", no_argument, 0, 'h' }, \
	{ "list-subcommands", no_argument, 0, OPT_LIST_SUBCOMMANDS }, \
	{ 0, 0, 0, 0 }, \
}
#define OFFLINE_CAT_SUBCOMMANDS { \
	{ NULL }, \
}
#define OFFLINE_CAT_HELP_TEXT \
	"Show entries in local store. Specify entries by itemid or use the\n" \
	"'latest' token to signify the latest message.\n" \
	"\n" \
	"Example: logjam sync ; logjam cat latest\n" \
	"\n" \
	"Options:\n" \
	"  -t, --desc                             Output entries in text format.\n" \
	"  -x, --xml                              Output entries in XML format.\n"
/* offline_cat */

/* offline_grep */
#define OFFLINE_GREP_SHORT_OPTIONS "+txieh"
#define OFFLINE_GREP_LONG_OPTIONS { \
	{ "text", no_argument, 0, 't' }, \
	{ "xml", no_argument, 0, 'x' }, \
	{ "ignorecase", no_argument, 0, 'i' }, \
	{ "extended", no_argument, 0, 'e' }, \
	{ "help", no_argument, 0, 'h' }, \
	{ "list-subcommands", no_argument, 0, OPT_LIST_SUBCOMMANDS }, \
	{ 0, 0, 0, 0 }, \
}
#define OFFLINE_GREP_SUBCOMMANDS { \
	{ NULL }, \
}
#define OFFLINE_GREP_HELP_TEXT \
	"Find entries by regexp.\n" \
	"Options:\n" \
	"  -t, --text                             Output entries in text format.\n" \
	"  -x, --xml                              Output entries in XML format.\n" \
	"  -i, --ignorecase                       Ignore case in searches.\n" \
	"  -e, --extended                         Use Extended Regular Expression syntax.\n"
/* offline_grep */

/* offline_summary */
#define OFFLINE_SUMMARY_SHORT_OPTIONS "+h"
#define OFFLINE_SUMMARY_LONG_OPTIONS { \
	{ "help", no_argument, 0, 'h' }, \
	{ "list-subcommands", no_argument, 0, OPT_LIST_SUBCOMMANDS }, \
	{ 0, 0, 0, 0 }, \
}
#define OFFLINE_SUMMARY_SUBCOMMANDS { \
	{ NULL }, \
}
#define OFFLINE_SUMMARY_HELP_TEXT \
	"Show a summary of an offline store.\n"
/* offline_summary */

/* offline_reindex */
#define OFFLINE_REINDEX_SHORT_OPTIONS "+h"
#define OFFLINE_REINDEX_LONG_OPTIONS { \
	{ "help", no_argument, 0, 'h' }, \
	{ "list-subcommands", no_argument, 0, OPT_LIST_SUBCOMMANDS }, \
	{ 0, 0, 0, 0 }, \
}
#define OFFLINE_REINDEX_SUBCOMMANDS { \
	{ NULL }, \
}
#define OFFLINE_REINDEX_HELP_TEXT \
	"Rebuild the index an offline store.\n"
/* offline_reindex */

/* user */
#define USER_SHORT_OPTIONS "+h"
#define USER_LONG_OPTIONS { \
	{ "help", no_argument, 0, 'h' }, \
	{ "list-subcommands", no_argument, 0, OPT_LIST_SUBCOMMANDS }, \
	{ 0, 0, 0, 0 }, \
}
#define USER_SUBCOMMANDS { \
	{ "add", _("Add a user to the user list."), FALSE, FALSE, FALSE, do_user_add }, \
	{ NULL }, \
}
#define USER_HELP_TEXT \
	"Manage user list.\n"
/* user */

/* user_add */
#define USER_ADD_SHORT_OPTIONS "+ph"
#define USER_ADD_LONG_OPTIONS { \
	{ "nopassword", no_argument, 0, 'p' }, \
	{ "help", no_argument, 0, 'h' }, \
	{ "list-subcommands", no_argument, 0, OPT_LIST_SUBCOMMANDS }, \
	{ 0, 0, 0, 0 }, \
}
#define USER_ADD_SUBCOMMANDS { \
	{ NULL }, \
}
#define USER_ADD_HELP_TEXT \
	"Add a user to LogJam's configured list.\n" \
	"Usage: logjam user add USERNAME [PASSWORD]\n" \
	" \n" \
	"\n" \
	"Options:\n" \
	"  -p, --nopassword                       Don't save a password for this user.\n"
/* user_add */


